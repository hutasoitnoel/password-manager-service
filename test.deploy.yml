name: Generate a build and push to "build" branch

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Deploy to hostinger
    steps:
      - name: git-checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Set Environment Variables
        run: |
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          echo "DEVELOPMENT_UI_URL=${{ secrets.DEVELOPMENT_UI_URL }}" >> $GITHUB_ENV
          echo "PRODUCTION_UI_URL=${{ secrets.PRODUCTION_UI_URL }}" >> $GITHUB_ENV

      - name: Build
        script: |
          mkdir build-folder
          go build -o build-folder

      - name: Push # Push build to build repo
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build # The branch name where you want to push the assets
          FOLDER: build-folder # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message

      - name: Run app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            kill $(ps aux | grep './password-manager-service' | grep -v grep | awk '{print $2}')
            cd builds
            cd password-manager-service
            git checkout build
            git pull
            /home/linuxbrew/.linuxbrew/opt/go@1.21/bin/go build
            nohup ./password-manager-service >/dev/null 2>&1 &
