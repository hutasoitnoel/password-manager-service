name: Deploy to VM

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Deploy to VM
    steps:
      - name: git-checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.0'

      - name: Create directory
        run: mkdir build-folder

      - name: Build go app
        run: go build -o build-folder

      - name: Push to build branch
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build
          FOLDER: build-folder
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: "Build: ({sha}) {msg}"

      - name: Run app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            kill $(ps aux | grep './password-manager-service' | grep -v grep | awk '{print $2}')
            cd builds/password-manager-service
            git pull
            rm .env
            echo "APP_ENV=${{ secrets.APP_ENV }}" >> .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "DEVELOPMENT_UI_URL=${{ secrets.DEVELOPMENT_UI_URL }}" >> .env
            echo "PRODUCTION_UI_URL=${{ secrets.PRODUCTION_UI_URL }}" >> .env
            echo "PROXY_UI_URL=${{ secrets.PROXY_UI_URL }}" >> .env
            echo "API_NINJA_API_KEY=${{ secrets.API_NINJA_API_KEY }}" >> .env
            echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> .env
            nohup ./password-manager-service >/dev/null 2>&1 &